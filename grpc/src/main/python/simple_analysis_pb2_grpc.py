# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import simple_analysis_pb2 as simple__analysis__pb2


class SimpleAnalysisServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AnalyzeSentence = channel.unary_unary(
        '/zemberek.simple_analysis.SimpleAnalysisService/AnalyzeSentence',
        request_serializer=simple__analysis__pb2.SentenceAnalysisRequest.SerializeToString,
        response_deserializer=simple__analysis__pb2.SentenceAnalysis_P.FromString,
        )
    self.AnalyzeWord = channel.unary_unary(
        '/zemberek.simple_analysis.SimpleAnalysisService/AnalyzeWord',
        request_serializer=simple__analysis__pb2.WordAnalysisRequest.SerializeToString,
        response_deserializer=simple__analysis__pb2.WordAnalysis_P.FromString,
        )


class SimpleAnalysisServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AnalyzeSentence(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AnalyzeWord(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SimpleAnalysisServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AnalyzeSentence': grpc.unary_unary_rpc_method_handler(
          servicer.AnalyzeSentence,
          request_deserializer=simple__analysis__pb2.SentenceAnalysisRequest.FromString,
          response_serializer=simple__analysis__pb2.SentenceAnalysis_P.SerializeToString,
      ),
      'AnalyzeWord': grpc.unary_unary_rpc_method_handler(
          servicer.AnalyzeWord,
          request_deserializer=simple__analysis__pb2.WordAnalysisRequest.FromString,
          response_serializer=simple__analysis__pb2.WordAnalysis_P.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zemberek.simple_analysis.SimpleAnalysisService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
